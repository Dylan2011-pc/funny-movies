{"ast":null,"code":"var _jsxFileName = \"/home/dylan/github.com/funny-movies/client/src/store/rootStore.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext } from \"react\";\nimport useLocalObservable, { observable, action } from \"mobx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootStoreContext = /*#__PURE__*/createContext();\nconst useRootStore = () => {\n  _s();\n  const store = React.useContext(RootStoreContext);\n  if (!store) {\n    throw new Error(\"You have forgot to use StoreProvider\");\n  }\n  return store;\n};\n_s(useRootStore, \"Wl1jJrZzTCxjtMcqth/dX4wg3Uo=\");\nconst RootStoreProvider = _ref => {\n  _s2();\n  let {\n    children\n  } = _ref;\n  const store = useLocalObservable(() => ({\n    counter: 0,\n    increment: action(() => {\n      store.counter++;\n    })\n  }));\n  return /*#__PURE__*/_jsxDEV(RootStoreContext.Provider, {\n    value: store,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s2(RootStoreProvider, \"v8kuHChjTEmMZ3bg5oZ8zBWX1eE=\", false, function () {\n  return [useLocalObservable];\n});\n_c = RootStoreProvider;\nexport { RootStoreProvider, useRootStore };\nvar _c;\n$RefreshReg$(_c, \"RootStoreProvider\");","map":{"version":3,"names":["React","createContext","useLocalObservable","observable","action","jsxDEV","_jsxDEV","RootStoreContext","useRootStore","_s","store","useContext","Error","RootStoreProvider","_ref","_s2","children","counter","increment","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/dylan/github.com/funny-movies/client/src/store/rootStore.js"],"sourcesContent":["import React ,{ createContext } from \"react\";\nimport useLocalObservable, { observable, action } from \"mobx\";\n\nconst RootStoreContext = createContext();\n\nconst useRootStore = () => {\n  const store = React.useContext(RootStoreContext);\n  if (!store) {\n    throw new Error(\"You have forgot to use StoreProvider\");\n  }\n  return store;\n};\n\nconst RootStoreProvider = ({ children }) => {\n  const store = useLocalObservable(() => ({\n    counter: 0,\n    increment: action(() => {\n      store.counter++;\n    }),\n  }));\n  return (\n    <RootStoreContext.Provider value={store}>\n      {children}\n    </RootStoreContext.Provider>\n  );\n};\n\nexport { RootStoreProvider, useRootStore };"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,QAAQ,OAAO;AAC5C,OAAOC,kBAAkB,IAAIC,UAAU,EAAEC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,gBAAgB,gBAAGN,aAAa,EAAE;AAExC,MAAMO,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,KAAK,GAAGV,KAAK,CAACW,UAAU,CAACJ,gBAAgB,CAAC;EAChD,IAAI,CAACG,KAAK,EAAE;IACV,MAAM,IAAIE,KAAK,CAAC,sCAAsC,CAAC;EACzD;EACA,OAAOF,KAAK;AACd,CAAC;AAACD,EAAA,CANID,YAAY;AAQlB,MAAMK,iBAAiB,GAAGC,IAAA,IAAkB;EAAAC,GAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC,GAAAF,IAAA;EACrC,MAAMJ,KAAK,GAAGR,kBAAkB,CAAC,OAAO;IACtCe,OAAO,EAAE,CAAC;IACVC,SAAS,EAAEd,MAAM,CAAC,MAAM;MACtBM,KAAK,CAACO,OAAO,EAAE;IACjB,CAAC;EACH,CAAC,CAAC,CAAC;EACH,oBACEX,OAAA,CAACC,gBAAgB,CAACY,QAAQ;IAACC,KAAK,EAAEV,KAAM;IAAAM,QAAA,EACrCA;EAAQ;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACiB;AAEhC,CAAC;AAACT,GAAA,CAZIF,iBAAiB;EAAA,QACPX,kBAAkB;AAAA;AAAAuB,EAAA,GAD5BZ,iBAAiB;AAcvB,SAASA,iBAAiB,EAAEL,YAAY;AAAG,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}